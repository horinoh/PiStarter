'CONST #GRP_POLY_PAGE=3
'CONST #GRP_POLY_WIDTH=96
'CONST #GRP_POLY_HEIGHT=96
'CONST #GRP_PPOLY_MARGIN=1
VAR _GRP_POLY_PAGE=3
VAR _GRP_POLY_WIDTH=96
VAR _GRP_POLY_HEIGHT=96
VAR _GRP_PPOLY_MARGIN=1

'SPVAR INDEX
'CONST #X0=0:CONST #Y0=1
'CONST #X1=2:CONST #Y1=3
'CONST #X2=4:CONST #Y3=5
'CONST #NX=6:CONST #NY=7
VAR _X0=0,_Y0=1
VAR _X1=2,_Y1=3
VAR _X2=4,_Y2=5
VAR _NX=6,_NY=7

'ARRAY INDEX
'CONST #X=0:CONST #Y=1:CONST #Z=2:CONST #W=3
VAR _X=0,_Y=1,_Z=2,_W=3

'COMMON DEF GRP_POLY_PAGE() RETURN #GRP_POLY_PAGE END
'COMMON DEF GRP_POLY_WIDTH() RETURN #GRP_POLY_WIDTH END
'COMMON DEF GRP_POLY_HEIGHT() RETURN #GRP_POLY_HEIGHT END
'COMMON DEF GRP_POLY_MARGIN() RETURN #GRP_PPOLY_MARGIN END
COMMON DEF GRP_POLY_PAGE() RETURN _GRP_POLY_PAGE END
COMMON DEF GRP_POLY_WIDTH() RETURN _GRP_POLY_WIDTH END
COMMON DEF GRP_POLY_HEIGHT() RETURN _GRP_POLY_HEIGHT END
COMMON DEF GRP_POLY_MARGIN() RETURN _GRP_PPOLY_MARGIN END

'COMMON DEF GRP_POLY_COLUMN_COUNT(I%) RETURN #GRPWIDTH DIV GRP_POLY_WIDTH() END
VAR _GRPWIDTH=1280,_GRPHEIGHT=1024
COMMON DEF GRP_POLY_COLUMN_COUNT(I%) RETURN _GRPWIDTH DIV GRP_POLY_WIDTH() END
COMMON DEF GRP_POLY_COLUMN(I%) RETURN I% MOD GRP_POLY_COLUMN_COUNT(I%) END
COMMON DEF GRP_POLY_ROW(I%) RETURN I% DIV GRP_POLY_COLUMN_COUNT(I%) END

DEF VERIFY_DRAWING_RANGE(I%)
VAR MXROW=GRP_POLY_ROW(i%)
 VAR MXY=MXROW*GRP_POLY_HEIGHT()
 'VAR MXCOL=#GRPWIDTH DIV GRP_POLY_WIDTH()
 VAR MXCOL=_GRPWIDTH DIV GRP_POLY_WIDTH()
 VAR MXX=MXCOL*GRP_POLY_WIDTH()
 '?"POLY SIZE=";
 '?GRP_POLY_WIDTH();
 '?"x";
 '?GRP_POLY_HEIGHT()
 '?"COLUMNxROW=";
 '?MXCOL;
 '?"x";
 '?MXROW
 'IF MXY>#GRPHEIGHT THEN
 IF MXY>_GRPHEIGHT THEN 
  COLOR #YELLOW
  ?"REQUIRED SIZE=";
  ?MXX;
  ?"x";
  ?MXY
  ?"LIMIT SIZE=";
  '?#GRPWIDTH;
  ?_GRPWIDTH;
  ?"x";
  '?#GRPHEIGHT
  ?_GRPHEIGHT
  COLOR #WHITE
  RETURN #FALSE
 ENDIF
 RETURN #TRUE
END

COMMON DEF GRP_DRAW_TRIANGLES PG%,W%,H%,MGN%,COL%
 'GTARGET PG%
 GPAGE 0,PG%

 GCLS

 VAR WMGN%=W%-MGN%
 VAR HMGN%=H%-MGN%
 VAR I%
 
 IF !VERIFY_DRAWING_RANGE(WMGN%-1) THEN RETURN ENDIF

 FOR I%=0 TO W%-1
  VAR OFX%=GRP_POLY_COLUMN(I%)*GRP_POLY_WIDTH()
  VAR OFY%=GRP_POLY_ROW(I%)*GRP_POLY_HEIGHT()
  GTRI OFX%+I%,OFY%, OFX%,OFY%+HMGN%, OFX%+WMGN%,OFY%+HMGN%, COL%
 NEXT
END

COMMON DEF SPPOLY_SETUP
 ' SPRITE TEMPLATE
 VAR DID%=0
 SPDEF DID%, 0,0, GRP_POLY_WIDTH(),GRP_POLY_HEIGHT(), 0,GRP_POLY_HEIGHT()

 SPPAGE GRP_POLY_PAGE()
 ' SPRITE MAX (R:[0,511],4:[0,4095])
 'FOR I%=0 TO 4095
 FOR I%=0 TO 511
  SPSET I%,DID%
  SPFUNC I%,"SPPOLY_DRAW"
  SPHIDE I%
 NEXT
END

COMMON DEF SPPOLY_CLEAR
 'FOR I%=0 TO 4095
 FOR I%=0 TO 511
  SPHIDE I%
 NEXT
END

COMMON DEF SPPOLY_DRAW
 'VAR I%=CALLIDX()
 VAR I%=CALLIDX
 
 '3 VERTICES : A,B,C
 VAR A[2]'=[SPVAR(I%,#X0), SPVAR(I%,#Y0)]
 VAR B[2]'=[SPVAR(I%,#X1), SPVAR(I%,#Y1)]
 VAR C[2]'=[SPVAR(I%,#X2), SPVAR(I%,#Y2)]
 VAR N[2]'=[SPVAR(I%,#NX)*2-1,SPVAR(I%,#Y)*2-1]
 A[_X]=SPVAR(I%,_X0):A[_Y]=SPVAR(I%,_Y0)
 B[_X]=SPVAR(I%,_X1):B[_Y]=SPVAR(I%,_Y1)
 C[_X]=SPVAR(I%,_X2):C[_Y]=SPVAR(I%,_Y2)
 N[_X]=SPVAR(I%,_NX)*2-1:N[_Y]=SPVAR(I%,_NY)*2-1

 '3 EDGES : AB,BC,CA
 VAR AB[2],BC[2],CA[2]
 'ARYOP #AOPSUB,AB,B,A
 'ARYOP #AOPSUB,BC,C,B
 'ARYOP #AOPSUB,CA,A,C
 VAR J%
 FOR J%=0 TO LEN(AB)-1 AB[J%]=B[J%]-A[J%] NEXT
 FOR J%=0 TO LEN(BC)-1 BC[J%]=C[J%]-B[J%] NEXT
 FOR J%=0 TO LEN(CA)-1 CA[J%]=A[J%]-C[J%] NEXT

 'MAKE AB THE LONGEST EDGE
 VAR EDGES[3]'=[DOT(AB.AB),DOT(BC,BC),DOT(CA,CA)]
 EDGES[0]=DOT(AB,AB):EDGES[1]=DOT(BC,BC):EDGES[2]=DOT(CA,CA)
 VAR MX=MAX(EDGES)
 'DEGENERATE TRIANGLE
 IF MX<1 THEN RETURN ENDIF
 IF MX==EDGES[1] THEN
  'A[#X]=SPVAR(I%,#X1):A[#Y]=SPVAR(I%,#Y1)
  'B[#X]=SPVAR(I%,#X2):B[#Y]=SPVAR(I%,#Y2) 
  'C[#X]=SPVAR(I%,#X0):C[#Y]=SPVAR(I%,#Y0)
  A[_X]=SPVAR(I%,_X1):A[_Y]=SPVAR(I%,_Y1)
  B[_X]=SPVAR(I%,_X2):B[_Y]=SPVAR(I%,_Y2) 
  C[_X]=SPVAR(I%,_X0):C[_Y]=SPVAR(I%,_Y0)
  COPY AB,BC
 ELSEIF MX==EDGES[2] THEN
  'A[#X]=SPVAR(I%,#X2):A[#Y]=SPVAR(I%,#Y2)
  'B[#X]=SPVAR(I%,#X0):B[#Y]=SPVAR(I%,#Y0) 
  'C[#X]=SPVAR(I%,#X1):C[#Y]=SPVAR(I%,#Y1)
  A[_X]=SPVAR(I%,_X2):A[_Y]=SPVAR(I%,_Y2)
  B[_X]=SPVAR(I%,_X0):B[_Y]=SPVAR(I%,_Y0) 
  C[_X]=SPVAR(I%,_X1):C[_Y]=SPVAR(I%,_Y1)
  COPY AB,CA
 ENDIF

 'BASE POINT : A
 'SPOFS I%,A[#X],A[#Y]
  SPOFS I%,A[_X],A[_Y]
 
  'UV
  VAR D[2]
  VAR T=CLOSEST_POINT_LINE(D,C,A,B)
  VAR PW=GRP_POLY_WIDTH()
  VAR PH=GRP_POLY_HEIGHT()
  VAR AID%=T*(PW-1)
  VAR ROW=GRP_POLY_ROW(AID%)
  VAR COL=GRP_POLY_COLUMN(AID%)
  SPANIM I%,"UV",1,COL*PH,ROW*GRP_POLY_HEIGHT()

 'SCALE
  VAR CD[2]
 'ARYOP #AOPSUB,CD,D,C
  FOR K%=0 TO LEN(CD)-1 CD[K%]=D[K%]-C[K%] NEXT
  SPSCALE I%,SQR(DOT(AB,AB))/PW,SQR(DOT(CD,CD))/PH

 'ROTATION
 'SPROT I%,DEG(ATAN(AB[#Y],AB[#X]))
  SPROT I%,DEG(ATAN(AB[_Y],AB[_X]))

  'COLOR
  SPCOLOR I%,RGB(127,255,255,0)
  IF I% MOD 2==0 THEN
   SPCOLOR I%,RGB(127,255,255,0)
  ELSE
   SPCOLOR I%,RGB(127,255,0,255)
  ENDIF

  VAR NZ=1-DOT(N,N)
  IF NZ>=0 THEN 
    NZ=SQR(NZ)
    'SPCOLOR I%,RGB(200,(N[_X]*0.5+0.5)*255,(N[_Y]*0.5+0.5)*255,(NZ*0.5+0.5)*255)
  ENDIF

  SPSHOW I%

  'GTRI A[_X],A[_Y],B[_X],B[_Y],C[_X],C[_Y],#GREEN 'ALPHA MUST BE 255
  'GLINE A[_X],A[_Y],B[_X],B[_Y],#WHITE:GLINE B[_X],B[_Y],C[_X],C[_Y],#WHITE:GLINE C[_X],C[_Y],A[_X],A[_Y],#WHITE
  'GLINE A[_X],A[_Y],B[_X],B[_Y],#RED:GLINE B[_X],B[_Y],C[_X],C[_Y],#GREEN:GLINE C[_X],C[_Y],A[_X],A[_Y],#BLUE
  'GLINE C[_X],C[_Y],D[_X],D[_Y],#WHITE:GBOX C[_X]-1,C[_Y]-1,C[_X]+1,C[_Y]+1,#WHITE:GBOX D[_X]-3,D[_Y]-3,D[_X]+3,D[_Y]+3,#WHITE
END

COMMON DEF SPPOLY_INDEX_BUFFER O%[],U%,V%
 VAR I%,J%
 'RESIZE O%,0
 FOR I%=0 TO LEN(O%)-1 VAR TMP=SHIFT(O%) NEXT
 FOR I%=0 TO V%-2
  FOR J%=0 TO U%-2
   VAR LT%=I%*U%+J%
   VAR LB%=(I%+1)*U%+J%
   PUSH O%,LT%
   PUSH O%,LB%
   PUSH O%,LB%+1
   PUSH O%,LT%
   PUSH O%,LB%+1
   PUSH O%,LT%+1
  NEXT
 NEXT
END

COMMON DEF SPPOLY_VERTEX_BUFFER O[],U%,V%,FUNC$
 VAR I%,J%
 'RESIZE O,0
 'FOR I%=0 TO LEN(O)-1 VAR TMP=SHIFT(O) NEXT
 VAR UV[2]
 VAR U1=U%-1,V1=V%-1
 FOR I%=0 TO V1
  FOR J%=0 TO U1
   'UV[#X]=J%/U1
   'UV[#Y]=I%/V1
   UV[_X]=J%/U1
   UV[_Y]=I%/V1
   '?UV[_X],UV[_Y]
   CALL FUNC$,O,UV
  NEXT
 NEXT
END

COMMON DEF SPPOLY_NORMAL_BUFFER O[],U%,V%,FUNC$
 VAR I%,J%
 'RESIZE O,0
 VAR TMP
 FOR I%=0 TO LEN(O)-1 TMP=SHIFT(O) NEXT
 VAR UV[2]
 VAR P[2],PU[2],PV[2]
 VAR U1=U%-1,V1=V%-1
 FOR I%=0 TO V%-1
  FOR J%=0 TO U%-1
   VAR K%
   'UV[#X]=J%/U1
   'UV[#Y]=I%/V1
   UV[_X]=J%/U1
   UV[_Y]=I%/V1
   'RESIZE P,0
   FOR K%=0 TO LEN(P)-1 TMP=SHIFT(P) NEXT
   CALL FUNC$,P,UV

   'UV[#X]=UV[#X]+0.1
   UV[_X]=UV[_X]+0.1
   'RESIZE PU,0
   FOR K%=0 TO LEN(PU)-1 TMP=SHIFT(PU) NEXT
   CALL FUNC$,PU,UV

   'UV[#X]=UV[#X]-0.1:UV[#Y]=UV[#Y]+0.1
   UV[_X]=UV[_X]-0.1:UV[_Y]=UV[_Y]+0.1
   'RESIZE PV,0
   FOR K%=0 TO LEN(PV)-1 TMP=SHIFT(PV) NEXT
   CALL FUNC$,PV,UV

   'ARYOP #AOPSUB,PU,PU,P
   'ARYOP #AOPSUB,PV,PV,P
   FOR K%=0 TO LEN(PU)-1 PU[K%]=PU[K%]-P[K%] NEXT
   FOR K%=0 TO LEN(PV)-1 PV[K%]=PV[K%]-P[K%] NEXT
   CROSS P,PU,PV
   NORMALIZE P,P

   'PUSH O,P[#X]:PUSH O,P[#Y]:PUSH O,P[#Z]
   PUSH O,P[_X]:PUSH O,P[_Y]:PUSH O,P[_Z]
  NEXT
 NEXT
END

COMMON DEF SPPOLY_TRANSFORM3 O[],NB[],M[]
 VAR I%
 FOR I%=0 TO LEN(NB)-1 STEP 3
  VAR N[3]'=[NB[I%+#X],NB[I%+#Y],BB[I%+#Z]]
  N[_X]=NB[I%+_X]:N[_Y]=NB[I%+_Y]:N[_Z]=NB[I%+_Z]
  TRANSFORM3 N,N,M
  'PUSH O,N[#X]:PUSH O,N[#Y]:PUSH O,N[#Z]
  PUSH O,N[_X]:PUSH O,N[_Y]:PUSH O,N[_Z]
 NEXT
END

COMMON DEF SPPOLY_TRANSFORM4 O[],VB[],M[]
 VAR I%
 FOR I%=0 TO LEN(VB)-1 STEP 3
  VAR V[4]'=[VB[I%+#X],VB[I%+#Y],VB[I%+#Z],1]
  V[_X]=VB[I%+_X]:V[_Y]=VB[I%+_Y]:V[_Z]=VB[I%+_Z]:V[_W]=1
  TRANSFORM4 V,V,M
  'PUSH O,V[#X]:PUSH O,V[#Y]:PUSH O,V[#Z]
  PUSH O,V[_X]:PUSH O,V[_Y]:PUSH O,V[_Z]
 NEXT
END

COMMON DEF SPPOLY_DRAW_INDEXED IB%[],VB[],NB[]
 VAR I%
 VAR J%=0
 FOR I%=0 TO LEN(IB%)-1 STEP 3
  VAR I0%=IB%[I%+0]*3
  VAR I1%=IB%[I%+1]*3
  VAR I2%=IB%[I%+2]*3

  VAR A[3]'=[VB[I0%+#X],VB[I0%+#Y],VB[I0%+#Z]]
  VAR B[3]'=[VB[I1%+#X],VB[I1%+#Y],VB[I1%+#Z]]
  VAR C[3]'=[VB[I2%+#X],VB[I2%+#Y],VB[I2%+#Z]]
  VAR N[3]'=[(NB[I0%+#X]+NB[I1%+#X]+NB[I2%+#X])/3,(NB[I0%+#Y]+NB[I1%+#Y]+NB[I2%+#Y])/3,(NB[I0%+#Z]+NB[I1%+#Z]+NB[I2%+#Z])/3]
  A[_X]=VB[I0%+_X]:A[_Y]=VB[I0%+_Y]:A[_Z]=VB[I0%+_Z]
  B[_X]=VB[I1%+_X]:B[_Y]=VB[I1%+_Y]:B[_Z]=VB[I1%+_Z]
  C[_X]=VB[I2%+_X]:C[_Y]=VB[I2%+_Y]:C[_Z]=VB[I2%+_Z]
  N[_X]=(NB[I0%+_X]+NB[I1%+_X]+NB[I2%+_X])/3
  N[_Y]=(NB[I0%+_Y]+NB[I1%+_Y]+NB[I2%+_Y])/3
  N[_Z]=(NB[I0%+_Z]+NB[I1%+_Z]+NB[I2%+_Z])/3
  NORMALIZE N,N
  'ARYOP #AOPMAD N,0.5,0.5
  N[_X]=N[_X]*0.5+0.5:N[_Y]=N[_Y]*0.5+0.5:N[_Z]=N[_Z]*0.5+0.5

  'CULL FACE
  VAR AB[3]
  'ARYOP #AOPSUB AB,B,A
  VAR K%
  FOR K%=0 TO LEN(AB)-1 AB[K%]=B[K%]-A[K%] NEXT
  VAR AC[3]
  'ARYOP #AOPSUB AC,C,A
  FOR K%=0 TO LEN(AC)-1 AC[K%]=C[K%]-A[K%] NEXT
  VAR DIR[3]
  CROSS DIR,AB,AC
  'IF DIR[#Z]>=0 THEN RETURN ENDIF
  IF DIR[_Z]>=0 THEN RETURN ENDIF

  'SPVAR J%,#X0,A[#X]:SPVAR J%,#Y0,A[#Y]
  'SPVAR J%,#X1,B[#X]:SPVAR J%,#Y1,B[#Y]
  'SPVAR J%,#X2,C[#X]:SPVAR J%,#Y2,C[#Y]
  'SPVAR J%,#NX,N[#X]:SPVAR J%,#NY,N[#Y]
  SPVAR J%,_X0,A[_X]:SPVAR J%,_Y0,A[_Y]
  SPVAR J%,_X1,B[_X]:SPVAR J%,_Y1,B[_Y]
  SPVAR J%,_X2,C[_X]:SPVAR J%,_Y2,C[_Y]
  SPVAR J%,_NX,N[_X]:SPVAR J%,_NY,N[_Y]
  INC J%
  'IF J%>4095 THEN ?"SPRITE OVERFLOW":?J%:RETURN ENDIF
  IF J%>511 THEN ?"SPRITE OVERFLOW":?J%:RETURN ENDIF
 NEXT
END

COMMON DEF SPPOLY_PLANE O[],UV[]
 'PUSH O,UV[#X]
 'PUSH O,UV[#Y]
 PUSH O,UV[_X]
 PUSH O,UV[_Y]
 PUSH O,0
END

COMMON DEF SPPOLY_TORUS O[],UV[]
 'UV[#X]=FRAC(UV[#X])*2*#PI
 'UV[#Y]=FRAC(UV[#Y])*2*#PI
 UV[_X]=FRAC(UV[_X])*2*PI()
 UV[_Y]=FRAC(UV[_Y])*2*PI()
 VAR R[2]'=[0.5,1]
 R[0]=0.5:R[1]=1
 'PUSH O,(R[1]+R[0]*COS(UV[#Y]))*COS(UV[#X])
 'PUSH O,(R[1]+R[0]*COS(UV[#Y]))*SIN(UV[#X])
 'PUSH O,R[0]*SIN(UV[#Y])
 PUSH O,(R[1]+R[0]*COS(UV[_Y]))*COS(UV[_X])
 PUSH O,(R[1]+R[0]*COS(UV[_Y]))*SIN(UV[_X])
 PUSH O,R[0]*SIN(UV[_Y])
END

COMMON DEF SPPOLY_SPHERE O[],UV[]
 'UV[#X]=FRAC(UV[#X])*2*#PI
 'UV[#Y]=(-FRAC(UV[#Y])+0.5)*2*#PI
 UV[_X]=FRAC(UV[_X])*2*PI()
 UV[_Y]=(-FRAC(UV[_Y])+0.5)*2*PI()
 'PUSH O,COS(UV[#X])*SIN(UV[#Y])
 'PUSH O,SIN(UV[#X])*SIN(UV[#Y])
 'PUSH O,COS(UV[#Y])
 PUSH O,COS(UV[_X])*SIN(UV[_Y])
 PUSH O,SIN(UV[_X])*SIN(UV[_Y])
 PUSH O,COS(UV[_Y])
END
